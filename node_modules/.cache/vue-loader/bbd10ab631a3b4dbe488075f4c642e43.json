{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\calendar-view\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\calendar-view\\index.vue","mtime":1589868463102},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TableCustom from '@/components/TableCustom'\n\nexport default {\n  name: 'Arrange',\n  components: {\n    TableCustom\n  },\n\n  data() {\n    return {\n        valueTeacher: [],\n        valueClass: [],\n        valueRoom: [],\n        valueSubject: [],\n        day: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n        loading: true,\n        dataListCalendar: [],\n        optionId: '',\n        listYear: [],\n        listSlot: [],\n        dataDetail: {},\n        dataListRoom: [],\n        dataListClass: [],\n        dataListLecturer: [],\n        dataListSubject: [],\n        modelRoom: '',\n        modelLecturer: '',\n        infoUser: {},\n        comment:null,\n        lecturerConfirm: null,\n        titleDialogFormVisibleComment: \"Reason\",\n        dialogFormVisibleComment: false,\n        yearSelected:[]\n\n    }\n  },\n    watch: {\n\n        optionId(){\n            this.yearSelected = this.listYear.filter(i => i.id === this.optionId)\n            if (!this.yearSelected[0].hasData) {\n                return;\n            }\n            this.getDataListSubject()\n            this.getDataListRoom()\n            this.getDataListClass()\n            this.getDataListLecturer()\n            this.getLecturerConfirm()\n        }\n    },\n\n  created() {\n    this.infoUser = JSON.parse(localStorage.getItem('infoUser'))\n    this.valueTeacher.push(this.infoUser.shortName);\n\n    this.getYear()\n\n},\nmethods: {\n  getListCalendar() {\n    // if(!this.valueTeacher.includes(this.infoUser.shortName) && !this.infoUser.role.roleName === 'ROLE_USER') {\n    //   this.valueTeacher.push(this.infoUser.shortName);\n    // }\n    if((this.lecturerConfirm.status ==='DRAFT' || !this.lecturerConfirm)  && this.infoUser.role.roleName === 'ROLE_USER'){\n      this.dataListCalendar = []\n      return;\n    }\n    this.loading = true\n    const postData = {\n      criteria: {\n        'timetable.semester': {\n          'id': this.optionId\n        },\n          \"timetable\":{\n              \"temp\": false\n          },\n        'subject' : {\n          'department': this.infoUser.department\n        }\n      },\n      inCriteria: {\n        room: {\n          name: this.valueRoom\n        },\n        className: {\n          name: this.valueClass\n        },\n        lecturer: {\n          shortName: this.valueTeacher\n        },\n        subject: {\n      \t  code: this.valueSubject\n        }\n      }\n    }\n    this.$store.dispatch('calendarView/getListcalendar', postData).then((data) => {\n      this.dataListCalendar = this.$store.state.calendarView.dataListCalendar\n      this.loading = false\n    }).catch(() => {\n      this.loading = false\n    })\n  },\n    getYear() {\n      this.loading = true\n      this.$store.dispatch('expected/getListYear').then((data) => {\n        this.listYear = this.$store.state.expected.listYear\n        this.listYear.forEach(element => {\n          if (element.now) {\n            this.optionId = element.id\n          }\n        })\n          this.yearSelected = this.listYear.filter(i => i.id === this.optionId)\n          if (!this.yearSelected[0].hasData) {\n              return;\n          }\n        this.getDataListSubject()\n        this.getDataListRoom()\n        this.getDataListClass()\n        this.getDataListLecturer()\n        this.getLecturerConfirm()\n      }).catch(() => {\n        this.loading = false\n      })\n    },\n\n    getDataListRoom() {\n        const data = {\n            params: {\n                semesterId: this.optionId\n            },\n            postData: {}\n        }\n        this.$store.dispatch('arrange/getDataRoom', data).then((data) => {\n            this.dataListRoom = this.$store.state.arrange.dataListRoom\n            // this.$router.push({ path: this.redirect || '/' })\n        }).catch(() => {\n            this.loading = false\n        })\n    },\n    getLecturerConfirm() {\n        const data = {\n            params: {\n                semesterId: this.optionId\n            }\n        }\n        this.$store.dispatch('calendarView/getLecturerConfirm', data).then((data) => {\n            this.lecturerConfirm = this.$store.state.calendarView.lecturerConfirm;\n            this.getListCalendar()\n            this.loading = false\n        }).catch(() => {\n            this.loading = false\n        })\n    },\n    acceptTimetable(){\n        const data = {\n            postData: {\n                id: this.lecturerConfirm.id,\n                status: 'FINAL'\n            }\n        }\n        this.$store.dispatch('calendarView/updateLecturerConfirm', data).then((data) => {\n            this.lecturerConfirm = this.$store.state.calendarView.lecturerConfirmUpdate;\n          this.$notify({\n            title: 'Success',\n            message: 'Confirm Successfully',\n            type: 'success',\n            duration: 2000\n          })\n\n\n        }).catch(() => {\n            this.loading = false\n        })\n\n    },\n    rejectTimetable(){\n        const data = {\n            postData: {\n                id: this.lecturerConfirm.id,\n                status: 'REJECT',\n                reason: this.comment\n            }\n        }\n        this.$store.dispatch('calendarView/updateLecturerConfirm', data).then((data) => {\n            this.lecturerConfirm = this.$store.state.calendarView.lecturerConfirmUpdate;\n            this.dialogFormVisibleComment = false\n          this.$notify({\n            title: 'Success',\n            message: 'Confirm Successfully',\n            type: 'success',\n            duration: 2000\n          })\n\n        }).catch(() => {\n            this.loading = false\n        })\n\n    },\n\n    getDataListSubject() {\n      const data = {\n        params: {\n          semesterId: this.optionId\n        },\n        postData: {}\n      }\n      this.$store.dispatch('arrange/getDataSubject', data).then((data) => {\n        this.dataListSubject = this.$store.state.arrange.dataListSubject\n      }).catch(() => {\n\n      })\n    },\n\n    getDataListLecturer() {\n      const postData = {\n          postData: {\n              criteria: {\n                  'login': true,\n                  'status': 0,\n                  department: this.infoUser.department\n              }\n          },\n          params: {\n              semesterId: this.optionId\n          },\n      }\n    this.$store.dispatch('arrange/getDataLecturer', postData).then((data) => {\n      this.dataListLecturer = this.$store.state.arrange.dataListLecturer.results\n      // this.$router.push({ path: this.redirect || '/' })\n    }).catch(() => {\n      this.loading = false\n    })\n  },\n\n    getDataListClass() {\n      const data = {\n        params: {\n          semesterId: this.optionId\n        },\n        postData: {}\n      }\n      this.$store.dispatch('arrange/getDataClass', data).then((data) => {\n        this.dataListClass = this.$store.state.arrange.dataListClass\n        // this.$router.push({ path: this.redirect || '/' })\n      }).catch(() => {\n        this.loading = false\n      })\n    }\n  }\n}\n",null]}