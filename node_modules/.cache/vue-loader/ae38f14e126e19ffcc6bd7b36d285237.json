{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\data-process\\index.vue?vue&type=template&id=76d67069&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\data-process\\index.vue","mtime":1589868463104},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      directives: [\n        {\n          name: \"loading\",\n          rawName: \"v-loading\",\n          value: _vm.loading,\n          expression: \"loading\"\n        }\n      ],\n      staticClass: \"request-container\"\n    },\n    [\n      _c(\n        \"el-select\",\n        {\n          attrs: { placeholder: \"Select\" },\n          model: {\n            value: _vm.valueOptionId,\n            callback: function($$v) {\n              _vm.valueOptionId = $$v\n            },\n            expression: \"valueOptionId\"\n          }\n        },\n        _vm._l(_vm.listYear, function(item) {\n          return _c(\"el-option\", {\n            key: item.value,\n            staticClass: \"arrange-item-select\",\n            attrs: { label: item.season + \" \" + item.year, value: item.id }\n          })\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"content\" }, [\n        _c(\"span\", { staticClass: \"title\" }, [\n          _vm._v(\"Upload data for semester :\")\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass:\n              \"large-12 medium-12 small-12 cell mt-3 request-container__wrapper\"\n          },\n          [\n            _c(\"div\", { staticClass: \"upload-btn-wrapper\" }, [\n              _c(\"button\", { staticClass: \"btn\" }, [_vm._v(\"Select File\")]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                ref: \"file\",\n                attrs: { type: \"file\", id: \"file\" },\n                on: {\n                  change: function($event) {\n                    return _vm.handleFileUpload()\n                  }\n                }\n              })\n            ]),\n            _vm._v(\" \"),\n            _vm.nameFile !== \"\"\n              ? _c(\"span\", { staticClass: \"name-file\" }, [\n                  _vm._v(_vm._s(_vm.nameFile))\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"ml-2\",\n                attrs: { type: \"primary\", disabled: !_vm.hasFile },\n                on: { click: _vm.submitFile }\n              },\n              [_vm._v(\"\\n        Submit file\\n      \")]\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        !_vm.isFileExcel\n          ? _c(\"span\", { staticClass: \"type-file\" }, [\n              _vm._v(\"*Select excel file\")\n            ])\n          : _vm._e()\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"content\" },\n        [\n          _c(\"span\", { staticClass: \"title\" }, [\n            _vm._v(\"Decision support tool for timetabling:\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { staticClass: \"title\", staticStyle: { \"padding-left\": \"70px\" } },\n            [_vm._v(\"SELECT MODEL\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-select\",\n            {\n              staticClass: \"arrange-item-select\",\n              attrs: { placeholder: \"Select\" },\n              model: {\n                value: _vm.valueModel,\n                callback: function($$v) {\n                  _vm.valueModel = $$v\n                },\n                expression: \"valueModel\"\n              }\n            },\n            _vm._l(_vm.listModel, function(item) {\n              return _c(\"el-option\", {\n                key: item.value,\n                staticClass: \"arrange-item-select\",\n                attrs: { label: item.label, value: item.value }\n              })\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"content-input\" }, [\n            _c(\"div\", { staticClass: \"content-input-1\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"mt-1\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Mutation rate\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 0, max: 1, precision: \"2\", step: \"0.01\" },\n                    model: {\n                      value: _vm.mutationRate,\n                      callback: function($$v) {\n                        _vm.mutationRate = $$v\n                      },\n                      expression: \"mutationRate\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-1 border-bottom\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Population size\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 50, precision: \"0\" },\n                    model: {\n                      value: _vm.populationSize,\n                      callback: function($$v) {\n                        _vm.populationSize = $$v\n                      },\n                      expression: \"populationSize\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Hard Constraint Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 0, max: 1, precision: \"2\", step: \"0.01\" },\n                    model: {\n                      value: _vm.hardConstraintCoff,\n                      callback: function($$v) {\n                        _vm.hardConstraintCoff = $$v\n                      },\n                      expression: \"hardConstraintCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2 border-bottom\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Soft Constraint Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 0, max: 1, precision: \"2\", step: \"0.01\" },\n                    model: {\n                      value: _vm.softConstraintCoff,\n                      callback: function($$v) {\n                        _vm.softConstraintCoff = $$v\n                      },\n                      expression: \"softConstraintCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Slot Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: {\n                      disabled: _vm.valueModel === 1,\n                      min: 0,\n                      max: 1,\n                      precision: \"2\",\n                      step: \"0.01\"\n                    },\n                    model: {\n                      value: _vm.slotCoff,\n                      callback: function($$v) {\n                        _vm.slotCoff = $$v\n                      },\n                      expression: \"slotCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2 border-bottom\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Distance Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: {\n                      disabled: _vm.valueModel === 1,\n                      min: 0,\n                      max: 1,\n                      precision: \"2\",\n                      step: \"0.01\"\n                    },\n                    model: {\n                      value: _vm.distanceCoff,\n                      callback: function($$v) {\n                        _vm.distanceCoff = $$v\n                      },\n                      expression: \"distanceCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Satisfaction Sum Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: {\n                      disabled: _vm.valueModel === 1,\n                      min: 0,\n                      max: 1,\n                      precision: \"2\",\n                      step: \"0.01\"\n                    },\n                    model: {\n                      value: _vm.satisfactionSumCoff,\n                      callback: function($$v) {\n                        _vm.satisfactionSumCoff = $$v\n                      },\n                      expression: \"satisfactionSumCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Standard Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: {\n                      disabled: _vm.valueModel === 1,\n                      min: 0,\n                      max: 1,\n                      precision: \"1\",\n                      step: \"0.01\"\n                    },\n                    model: {\n                      value: _vm.stdCoff,\n                      callback: function($$v) {\n                        _vm.stdCoff = $$v\n                      },\n                      expression: \"stdCoff\"\n                    }\n                  })\n                ],\n                1\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"content-input-2\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"mt-1\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Tournament size\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 1, precision: \"2\" },\n                    model: {\n                      value: _vm.tournamentSize,\n                      callback: function($$v) {\n                        _vm.tournamentSize = $$v\n                      },\n                      expression: \"tournamentSize\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-1 border-bottom\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Convergence Check Range\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 1, precision: \"0\" },\n                    model: {\n                      value: _vm.convergenceCheckRange,\n                      callback: function($$v) {\n                        _vm.convergenceCheckRange = $$v\n                      },\n                      expression: \"convergenceCheckRange\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-3\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Parttime Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 0, max: 1, precision: \"2\", step: \"0.01\" },\n                    model: {\n                      value: _vm.parttimeCoff,\n                      callback: function($$v) {\n                        _vm.parttimeCoff = $$v\n                      },\n                      expression: \"parttimeCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-3 border-bottom\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Fulltime Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 0, max: 1, precision: \"2\", step: \"0.01\" },\n                    model: {\n                      value: _vm.fulltimeCoff,\n                      callback: function($$v) {\n                        _vm.fulltimeCoff = $$v\n                      },\n                      expression: \"fulltimeCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Subject Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: {\n                      disabled: _vm.valueModel === 1,\n                      min: 0,\n                      max: 1,\n                      precision: \"2\",\n                      step: \"0.01\"\n                    },\n                    model: {\n                      value: _vm.subjectCoff,\n                      callback: function($$v) {\n                        _vm.subjectCoff = $$v\n                      },\n                      expression: \"subjectCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2 border-bottom\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Number Of Class Coefficient\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: {\n                      disabled: _vm.valueModel === 1,\n                      min: 0,\n                      max: 1,\n                      precision: \"2\",\n                      step: \"0.01\"\n                    },\n                    model: {\n                      value: _vm.numberOfClassCoff,\n                      callback: function($$v) {\n                        _vm.numberOfClassCoff = $$v\n                      },\n                      expression: \"numberOfClassCoff\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"mt-2\" },\n                [\n                  _c(\"label\", { staticClass: \"title\" }, [\n                    _vm._v(\"Generation Step\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"el-input-number\", {\n                    attrs: { min: 1, precision: \"0\" },\n                    model: {\n                      value: _vm.stepGen,\n                      callback: function($$v) {\n                        _vm.stepGen = $$v\n                      },\n                      expression: \"stepGen\"\n                    }\n                  })\n                ],\n                1\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\"),\n          _vm._v(\" \"),\n          _vm.isRunning\n            ? _c(\"span\", { staticClass: \"titleRunning\" }, [\n                _vm._v(\"Running arrange.....\")\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          !_vm.isRunning && _vm.listGeneration.length > 0\n            ? _c(\"span\", { staticClass: \"titleSuccess\" }, [\n                _vm._v(\" Arrange timetable successfully !\")\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"p\"),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            [\n              _c(\n                \"el-table\",\n                {\n                  directives: [\n                    {\n                      name: \"loading\",\n                      rawName: \"v-loading\",\n                      value: _vm.loadingGeneration,\n                      expression: \"loadingGeneration\"\n                    }\n                  ],\n                  attrs: {\n                    data: _vm.listGeneration,\n                    \"element-loading-text\": \"Loading\",\n                    border: \"\",\n                    fit: \"\",\n                    stripe: \"\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"Generation\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(ref) {\n                          var row = ref.row\n                          return [\n                            _c(\"span\", { staticClass: \"link-type\" }, [\n                              _vm._v(_vm._s(row.generation))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"Best Fitness\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(ref) {\n                          var row = ref.row\n                          return [\n                            _c(\"span\", { staticClass: \"link-type\" }, [\n                              _vm._v(_vm._s(row.bestFitness))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"Average Fitness\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(ref) {\n                          var row = ref.row\n                          return [\n                            _c(\"span\", { staticClass: \"link-type\" }, [\n                              _vm._v(_vm._s(row.avgFitness))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"Number of Violation\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(ref) {\n                          var row = ref.row\n                          return [\n                            _c(\"span\", { staticClass: \"link-type\" }, [\n                              _vm._v(_vm._s(row.numberOfViolation))\n                            ])\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"Action\", align: \"center\", width: \"300\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(ref) {\n                          var row = ref.row\n                          return [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"primary\", size: \"mini\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.previewGeneration(row)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              View timetable\\n            \"\n                                )\n                              ]\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"el-pagination\", {\n            staticClass: \"pagination-generation\",\n            attrs: {\n              background: \"\",\n              \"current-page\": _vm.currentPage,\n              \"page-sizes\": _vm.pageSizes,\n              total: _vm.totalCount,\n              layout: \"total, prev, pager, next\"\n            },\n            on: {\n              \"update:currentPage\": function($event) {\n                _vm.currentPage = $event\n              },\n              \"update:current-page\": function($event) {\n                _vm.currentPage = $event\n              },\n              \"current-change\": _vm.handleCurrentChange\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"p\"),\n          _vm._v(\" \"),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"{isRunning ? primary : danger\" },\n              on: {\n                click: function($event) {\n                  return _vm.actionArrange()\n                }\n              }\n            },\n            [\n              _vm._v(\n                \"\\n        \" +\n                  _vm._s(!_vm.isRunning ? \"Start arrange\" : \"Stop\") +\n                  \"\\n      \"\n              )\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              staticClass: \"dialog-detail-generation\",\n              attrs: { visible: _vm.dialogDetailGeneration },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.dialogDetailGeneration = $event\n                }\n              }\n            },\n            [\n              _c(\"span\", { staticClass: \"title\" }, [\n                _vm._v(\"Generation :\" + _vm._s(this.selected.generation))\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {},\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.setAsDefault()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Set as default\\n      \")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"sort-lecturer\" },\n                    [\n                      _c(\"label\", { staticClass: \"title\" }, [\n                        _vm._v(\"Search by lecturer\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"Select\",\n                            filterable: \"\",\n                            multiple: \"\"\n                          },\n                          model: {\n                            value: _vm.valueTeacher,\n                            callback: function($$v) {\n                              _vm.valueTeacher = $$v\n                            },\n                            expression: \"valueTeacher\"\n                          }\n                        },\n                        _vm._l(_vm.listTeach, function(item) {\n                          return _c(\"el-option\", {\n                            key: item,\n                            staticClass: \"arrange-item-select\",\n                            attrs: { label: item, value: item }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"TableCustom\", {\n                    attrs: {\n                      \"list-slot-data\": _vm.listDetailGeneration,\n                      header: _vm.slot,\n                      \"group-by\": \"lecturer\"\n                    }\n                  })\n                ],\n                1\n              )\n            ]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}