{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\components\\TableCustom\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\components\\TableCustom\\index.vue","mtime":1590592634210},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'TableCustom',\n  props: [\n    'listSlotData',\n    'header',\n    'groupBy',\n    'dataSwap'\n  ],\n  data() {\n    return {\n      dataChange: {},\n      listDataChange: []\n    }\n  },\n  methods: {\n    getDataItemArrange(itemSlot) {\n      this.listDataChange = this.dataSwap\n      const dataChange = itemSlot\n      this.dataChange = itemSlot\n      this.listDataChange.push(itemSlot)\n      if (this.listDataChange.length > 2) {\n        this.listDataChange.splice(0, 1)\n      }\n      // const index = this.listDataChange.findIndex(item => item.id === itemSlot.id)\n\n      // if (index !== -1) {\n      //   this.listDataChange.splice(index, 1)\n      // } else {\n      //   this.listDataChange.push(itemSlot)\n      // }\n      this.$emit('dataEdit', dataChange)\n      this.$emit('dataSwap', this.listDataChange)\n    },\n    handleCurrentChange(data) {\n      this.currentRow = data\n    }\n  }\n}\n",null]}