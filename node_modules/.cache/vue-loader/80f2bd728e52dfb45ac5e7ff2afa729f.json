{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\login\\index.vue","mtime":1589868463106},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { validUsername } from '@/utils/validate'\r\nimport GoogleLogin from 'vue-google-login'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  components: {\r\n    GoogleLogin\r\n  },\r\n  data() {\r\n    const validateUsername = (rule, value, callback) => {\r\n      if (!validUsername(value)) {\r\n        callback(new Error('Please enter the correct user name'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error('The password can not be less than 6 digits'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loading: false,\r\n      loginForm: {\r\n        username: 'admin',\r\n        password: '111111'\r\n      },\r\n      loginRules: {\r\n        username: [{ required: true, trigger: 'blur', validator: validateUsername }],\r\n        password: [{ required: true, trigger: 'blur', validator: validatePassword }]\r\n      },\r\n\r\n      params: {\r\n        client_id: '563389952152-j9gromb947b0j28nj2304j9vi07kdivk.apps.googleusercontent.com'\r\n      },\r\n\r\n      renderParams: {\r\n        longtitle: true\r\n      },\r\n      passwordType: 'password',\r\n      redirect: undefined,\r\n      infoUser: {}\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        this.redirect = route.query && route.query.redirect\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    onSignInSuccess(googleUser) {\r\n      this.loading = true\r\n      console.log(googleUser,'user nay')\r\n      const objectToSend = {\r\n        accessToken: googleUser.getAuthResponse(true).access_token\r\n      }\r\n\r\n      this.$store.dispatch('user/loginGoogle', objectToSend).then(() => {\r\n        this.infoUser = this.$store.state.user.userInfo\r\n        this.$router.push({ path: '/dashboard' })\r\n        this.loading = false\r\n      }).catch(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n\r\n    onSignInError(error) {\r\n      console.log(error)\r\n    },\r\n\r\n    showPwd() {\r\n      if (this.passwordType === 'password') {\r\n        this.passwordType = ''\r\n      } else {\r\n        this.passwordType = 'password'\r\n      }\r\n      this.$nextTick(() => {\r\n        this.$refs.password.focus()\r\n      })\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          this.$store.dispatch('user/login', this.loginForm).then(() => {\r\n            this.$router.push({ path: this.redirect || '/' })\r\n            this.loading = false\r\n          }).catch(() => {\r\n            this.loading = false\r\n          })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}