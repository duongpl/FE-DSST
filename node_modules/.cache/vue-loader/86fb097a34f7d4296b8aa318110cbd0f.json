{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\manage\\index.vue?vue&type=template&id=0050c4c2&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\manage\\index.vue","mtime":1590593915856},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"manager\" },\n    [\n      _c(\n        \"div\",\n        { staticStyle: { width: \"80%\", margin: \"auto\" } },\n        [\n          _c(\n            \"el-button\",\n            { attrs: { type: \"primary\" }, on: { click: _vm.handleCreate } },\n            [_vm._v(\"Add new department's lecturer\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"p\"),\n          _vm._v(\" \"),\n          _c(\n            \"el-select\",\n            {\n              staticClass: \"pad\",\n              attrs: { placeholder: \"Select\" },\n              model: {\n                value: _vm.valueOptionStatus,\n                callback: function($$v) {\n                  _vm.valueOptionStatus = $$v\n                },\n                expression: \"valueOptionStatus\"\n              }\n            },\n            _vm._l(_vm.listStatus, function(item) {\n              return _c(\"el-option\", {\n                key: item.value,\n                staticClass: \"report-item-select\",\n                attrs: { label: item.label, value: item.value }\n              })\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-select\",\n            {\n              staticStyle: { \"margin-left\": \"20px\" },\n              attrs: { filterable: \"\", placeholder: \"Select Email\" },\n              model: {\n                value: _vm.valueEmail,\n                callback: function($$v) {\n                  _vm.valueEmail = $$v\n                },\n                expression: \"valueEmail\"\n              }\n            },\n            _vm._l(_vm.dataListEmail, function(item) {\n              return _c(\"el-option\", {\n                key: item.id,\n                attrs: { label: item.title, value: item.value }\n              })\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"p\"),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.listLoading,\n                  expression: \"listLoading\"\n                }\n              ],\n              staticStyle: { \"box-shadow\": \"0px 0px 4px -1px #d2d2d2\" },\n              attrs: {\n                data: _vm.list,\n                \"element-loading-text\": \"Loading\",\n                border: \"\",\n                fit: \"\",\n                stripe: _vm.isActive,\n                \"highlight-current-row\": \"\",\n                \"row-class-name\": _vm.tableRowClassName\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { width: \"200\", label: \"Email\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"span\",\n                          {\n                            staticClass: \"link-type\",\n                            on: {\n                              click: function($event) {\n                                return _vm.info(row)\n                              }\n                            }\n                          },\n                          [_vm._v(_vm._s(row.email))]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { width: \"200\", label: \"Full Name\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [_vm._v(_vm._s(row.fullName))]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"Short Name\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [_vm._v(_vm._s(row.shortName))]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"Expected\", align: \"center\" },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function(ref) {\n                        var row = ref.row\n                        return row.login\n                          ? [\n                              row.fillingExpected && row.status === \"ACTIVATE\"\n                                ? _c(\n                                    \"el-tag\",\n                                    {\n                                      staticClass: \"text-success link-type\",\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.infoexpected(row)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"\\n          Completed\\n        \")]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !row.fillingExpected && row.status === \"ACTIVATE\"\n                                ? _c(\n                                    \"el-tag\",\n                                    {\n                                      staticClass: \"text-danger link-type\",\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.infoexpected(row)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n          Uncompleted\\n        \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ]\n                          : undefined\n                      }\n                    }\n                  ],\n                  null,\n                  true\n                )\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"Status\", align: \"center\" },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function(ref) {\n                        var row = ref.row\n                        return row.status === \"ACTIVATE\"\n                          ? [\n                              row.login\n                                ? _c(\n                                    \"el-tag\",\n                                    { staticClass: \"text-success\" },\n                                    [_vm._v(\"\\n          Logged in\\n        \")]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !row.login\n                                ? _c(\"el-tag\", { staticClass: \"text-danger\" }, [\n                                    _vm._v(\"\\n          Unlogged in\\n        \")\n                                  ])\n                                : _vm._e()\n                            ]\n                          : undefined\n                      }\n                    }\n                  ],\n                  null,\n                  true\n                )\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"Action\", align: \"center\", width: \"300\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      var $index = ref.$index\n                      return [\n                        row.login && row.status === \"ACTIVATE\"\n                          ? _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"primary\", size: \"mini\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.handleHOD(row)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n          Transfer position\\n        \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !row.login || row.status === \"DEACTIVATE\"\n                          ? _c(\n                              \"el-button\",\n                              {\n                                attrs: { size: \"mini\", type: \"danger\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.handleDelete(row, $index)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"\\n          Remove\\n        \")]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        row.login && row.status === \"DEACTIVATE\"\n                          ? _c(\n                              \"el-button\",\n                              {\n                                attrs: { size: \"mini\", type: \"success\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.changStatus(row, \"ACTIVATE\")\n                                  }\n                                }\n                              },\n                              [_vm._v(\"\\n          Activate\\n        \")]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        row.login && row.status === \"ACTIVATE\"\n                          ? _c(\n                              \"el-button\",\n                              {\n                                attrs: { size: \"mini\", type: \"info\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.changStatus(row, \"DEACTIVATE\")\n                                  }\n                                }\n                              },\n                              [_vm._v(\"\\n          Deactivate\\n        \")]\n                            )\n                          : _vm._e()\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"pagination-container\" },\n            [\n              _c(\n                \"el-pagination\",\n                _vm._b(\n                  {\n                    staticClass: \"pagination-generation\",\n                    attrs: {\n                      background: \"\",\n                      \"current-page\": _vm.currentPage,\n                      layout: \"total, sizes, prev, pager, next\",\n                      \"page-sizes\": _vm.pageSizes,\n                      total: _vm.total\n                    },\n                    on: {\n                      \"update:currentPage\": function($event) {\n                        _vm.currentPage = $event\n                      },\n                      \"update:current-page\": function($event) {\n                        _vm.currentPage = $event\n                      },\n                      \"current-change\": _vm.handleCurrentChange,\n                      \"size-change\": _vm.handleSizeChange\n                    }\n                  },\n                  \"el-pagination\",\n                  _vm.$attrs,\n                  false\n                )\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"edit\",\n          attrs: {\n            title: _vm.textMap[_vm.dialogStatus],\n            visible: _vm.dialogFormVisible\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataForm\",\n              staticStyle: { width: \"400px\", \"margin-left\": \"50px\" },\n              attrs: {\n                rules: _vm.rules,\n                model: _vm.temp,\n                \"label-position\": \"left\",\n                \"label-width\": \"200px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Lecturer Name\", prop: \"fullName\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.temp.fullName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"fullName\", $$v)\n                      },\n                      expression: \"temp.fullName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Phone Number\", prop: \"phone\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.temp.phone,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"phone\", $$v)\n                      },\n                      expression: \"temp.phone\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Short Name\", prop: \"shortName\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.temp.shortName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"shortName\", $$v)\n                      },\n                      expression: \"temp.shortName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"el-form-item\", { attrs: { label: \"Email\", prop: \"email\" } }, [\n                _c(\"span\", [_vm._v(_vm._s(_vm.temp.email))])\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Position\", prop: \"headOfDepartment\" } },\n                [\n                  _c(\"span\", [\n                    _vm._v(\n                      _vm._s(\n                        _vm.temp.headOfDepartment\n                          ? \"Head of Department\"\n                          : \"Lecturer\"\n                      )\n                    )\n                  ])\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Department\", prop: \"department\" } },\n                [_c(\"span\", [_vm._v(_vm._s(_vm.temp.department))])]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Full-time\", prop: \"fullTime\" } },\n                [\n                  _c(\"el-checkbox\", {\n                    model: {\n                      value: _vm.temp.fullTime,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"fullTime\", $$v)\n                      },\n                      expression: \"temp.fullTime\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Min of class quota\", prop: \"quotaClass\" } },\n                [\n                  _c(\"el-input-number\", {\n                    attrs: { min: 0, max: 10 },\n                    model: {\n                      value: _vm.temp.quotaClass,\n                      callback: function($$v) {\n                        _vm.$set(_vm.temp, \"quotaClass\", $$v)\n                      },\n                      expression: \"temp.quotaClass\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.dialogFormVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"\\n        Cancel\\n      \")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.updateData()\n                    }\n                  }\n                },\n                [_vm._v(\"\\n        Edit\\n      \")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"add\",\n          attrs: {\n            title: _vm.textMap[_vm.dialogStatus],\n            visible: _vm.dialogFormAdd\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormAdd = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataFormAdd\",\n              attrs: {\n                rules: _vm.emailAddRule,\n                model: _vm.emailAdd,\n                \"label-position\": \"left\",\n                \"label-width\": \"80px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Email\", prop: \"email\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"email\" },\n                    model: {\n                      value: _vm.emailAdd.email,\n                      callback: function($$v) {\n                        _vm.$set(_vm.emailAdd, \"email\", $$v)\n                      },\n                      expression: \"emailAdd.email\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.dialogFormAdd = false\n                    }\n                  }\n                },\n                [_c(\"Cancel\", [_vm._v(\"Cancel\")])],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.addData()\n                    }\n                  }\n                },\n                [_vm._v(\"\\n        Add\\n      \")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"manager-radio-dialog\",\n          attrs: { visible: _vm.dialogFormexpected },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogFormexpected = $event\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"manager-radio\" }, [\n            _c(\"span\", { staticClass: \"title\" }, [\n              _vm._v(\"View expected of \" + _vm._s(_vm.currentRow.email))\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\"),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"manager-radio-header\" },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"Select\" },\n                    model: {\n                      value: _vm.valueOption,\n                      callback: function($$v) {\n                        _vm.valueOption = $$v\n                      },\n                      expression: \"valueOption\"\n                    }\n                  },\n                  _vm._l(_vm.listYear, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.value,\n                      staticClass: \"manager-radio-item-select\",\n                      attrs: {\n                        label: item.season + \" \" + item.year,\n                        value: item.id\n                      }\n                    })\n                  }),\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"p\"),\n                _vm._v(\" \"),\n                _vm.expectedSubjects.length > 0\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"button\" },\n                      [\n                        !_vm.isEdit\n                          ? _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"primary\" },\n                                on: { click: _vm.editExpected }\n                              },\n                              [_vm._v(\"Edit\")]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.isEdit\n                          ? _c(\n                              \"el-button\",\n                              {\n                                attrs: { type: \"primary\" },\n                                on: { click: _vm.saveExected }\n                              },\n                              [_vm._v(\"Save\")]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.yearSelected[0]\n                          ? _c(\n                              \"div\",\n                              [\n                                !_vm.yearSelected[0].now &&\n                                this.$store.state.expected.dataExpected.canReuse\n                                  ? _c(\n                                      \"el-button\",\n                                      {\n                                        staticClass: \"reUseButton\",\n                                        attrs: { type: \"primary\" },\n                                        on: { click: _vm.reuseExpected }\n                                      },\n                                      [_vm._v(\"Reuse Expected\\n      \")]\n                                    )\n                                  : _vm._e()\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _vm.yearSelected[0]\n              ? _c(\"div\", [\n                  _c(\"p\"),\n                  _vm._v(\" \"),\n                  _vm.yearSelected[0].now &&\n                  this.$store.state.expected.dataExpected.id === 0\n                    ? _c(\"span\", { staticClass: \"title\" }, [\n                        _vm._v(\n                          _vm._s(_vm.currentRow.fullName) +\n                            \" no expectations in this term,select other term to reuse or create new ! \"\n                        )\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  !_vm.yearSelected[0].hasData\n                    ? _c(\"span\", { staticClass: \"title-warning\" }, [\n                        _vm._v(\"Don't have data for this semester!\")\n                      ])\n                    : _vm._e()\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.yearSelected[0]\n              ? _c(\"div\", [\n                  _vm.yearSelected[0].hasData\n                    ? _c(\"div\", { staticClass: \"manager-radio_content\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            directives: [\n                              {\n                                name: \"loading\",\n                                rawName: \"v-loading\",\n                                value: _vm.listLoadingRadio,\n                                expression: \"listLoadingRadio\"\n                              }\n                            ],\n                            staticClass: \"manager-radio_wrap\"\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { staticClass: \"manager-radio_subject\" },\n                              [\n                                _c(\"span\", { staticClass: \"title\" }, [\n                                  _vm._v(\"SUBJECT / PREFERENCE LEVEL\")\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"ListRadio\", {\n                                  attrs: {\n                                    \"data-subjects\": _vm.expectedSubjects,\n                                    \"is-edit\": _vm.isEdit,\n                                    \"is-subject\": true\n                                  },\n                                  on: {\n                                    changeValueRadio: _vm.handleDataExpectedEdit\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              { staticClass: \"manager-radio_time\" },\n                              [\n                                _c(\"span\", { staticClass: \"title\" }, [\n                                  _vm._v(\"SLOT / PREFERENCE LEVEL\")\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"ListRadio\", {\n                                  attrs: {\n                                    \"data-subjects\": _vm.expectedSlots,\n                                    \"is-edit\": _vm.isEdit,\n                                    \"is-subject\": false\n                                  },\n                                  on: {\n                                    changeValueRadio: _vm.handleDataExpectedEdit\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"div\", { staticClass: \"note\" }, [\n                                  _c(\"div\", { staticClass: \"note-wrapper\" }, [\n                                    _c(\"div\", { staticClass: \"main-content\" }, [\n                                      _c(\n                                        \"span\",\n                                        { staticClass: \"title-content\" },\n                                        [_vm._v(\" Note\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"M1:\")\n                                        ]),\n                                        _vm._v(\" slot 1 Mon,Tue,Fri\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"M2:\")\n                                        ]),\n                                        _vm._v(\" slot 2 Mon,Tue,Fri\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"M3:\")\n                                        ]),\n                                        _vm._v(\" slot 3 Mon,Tue,Fri\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"E1:\")\n                                        ]),\n                                        _vm._v(\" slot 4 Mon,Tue,Fri\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"E2:\")\n                                        ]),\n                                        _vm._v(\" slot 5 Mon,Tue,Fri\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"E3:\")\n                                        ]),\n                                        _vm._v(\" slot 6 Mon,Tue,Fri\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"M4:\")\n                                        ]),\n                                        _vm._v(\" slot 1,2 Tue | 1 Thursday\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"M5:\")\n                                        ]),\n                                        _vm._v(\" slot 3 Tue | 2,3 Thursday\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"E4:\")\n                                        ]),\n                                        _vm._v(\" slot 4,5 Tue | 1 Thursday\")\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"content\" }, [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"E5:\")\n                                        ]),\n                                        _vm._v(\" slot 6 Tue | 5,6 Thursday\")\n                                      ])\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"div\",\n                                      { staticClass: \"content-number\" },\n                                      [\n                                        _c(\"span\", { staticClass: \"title\" }, [\n                                          _vm._v(\"0,1,2,3,4,5:\")\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"span\", { staticClass: \"content\" }, [\n                                          _vm._v(\n                                            \"- Level of Lecturer's preference for slot/ subject.\"\n                                          )\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"span\", { staticClass: \"content\" }, [\n                                          _vm._v(\n                                            \"- The higher number, the higher preference.\"\n                                          )\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"span\", { staticClass: \"content\" }, [\n                                          _vm._v(\n                                            \"- Select 0 if Lecturer cannot teach this subject / slot.\"\n                                          )\n                                        ])\n                                      ]\n                                    )\n                                  ])\n                                ])\n                              ],\n                              1\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"manager-radio_content-footer\" },\n                          [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"manager-radio_content-footer-item\"\n                              },\n                              [\n                                _c(\"span\", { staticClass: \"title-item\" }, [\n                                  _vm._v(\"Number of class (Maximum 10)\")\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"el-input-number\", {\n                                  attrs: {\n                                    min: 1,\n                                    max: 10,\n                                    disabled: !_vm.isEdit\n                                  },\n                                  on: { change: _vm.handleChange },\n                                  model: {\n                                    value: _vm.expectedNote.expectedNumOfClass,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.expectedNote,\n                                        \"expectedNumOfClass\",\n                                        $$v\n                                      )\n                                    },\n                                    expression:\n                                      \"expectedNote.expectedNumOfClass\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"manager-radio_content-footer-item\"\n                              },\n                              [\n                                _c(\"span\", { staticClass: \"title-item\" }, [\n                                  _vm._v(\"Note\")\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    type: \"textarea\",\n                                    rows: 2,\n                                    placeholder: \"Please input\",\n                                    disabled: !_vm.isEdit\n                                  },\n                                  model: {\n                                    value: _vm.expectedNote.note,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.expectedNote, \"note\", $$v)\n                                    },\n                                    expression: \"expectedNote.note\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      ])\n                    : _vm._e()\n                ])\n              : _vm._e()\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}