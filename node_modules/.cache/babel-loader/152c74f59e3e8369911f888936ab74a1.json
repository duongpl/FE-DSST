{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\login\\index.vue","mtime":1589868463106},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/DUONG/Desktop/managetimetable_webapp/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _vueGoogleLogin = _interopRequireDefault(require(\"vue-google-login\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Login',\n  components: {\n    GoogleLogin: _vueGoogleLogin.default\n  },\n  data: function data() {\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!(0, _validate.validUsername)(value)) {\n        callback(new Error('Please enter the correct user name'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error('The password can not be less than 6 digits'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      loginForm: {\n        username: 'admin',\n        password: '111111'\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword\n        }]\n      },\n      params: {\n        client_id: '563389952152-j9gromb947b0j28nj2304j9vi07kdivk.apps.googleusercontent.com'\n      },\n      renderParams: {\n        longtitle: true\n      },\n      passwordType: 'password',\n      redirect: undefined,\n      infoUser: {}\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onSignInSuccess: function onSignInSuccess(googleUser) {\n      var _this = this;\n\n      this.loading = true;\n      console.log(googleUser, 'user nay');\n      var objectToSend = {\n        accessToken: googleUser.getAuthResponse(true).access_token\n      };\n      this.$store.dispatch('user/loginGoogle', objectToSend).then(function () {\n        _this.infoUser = _this.$store.state.user.userInfo;\n\n        _this.$router.push({\n          path: '/dashboard'\n        });\n\n        _this.loading = false;\n      }).catch(function () {\n        _this.loading = false;\n      });\n    },\n    onSignInError: function onSignInError(error) {\n      console.log(error);\n    },\n    showPwd: function showPwd() {\n      var _this2 = this;\n\n      if (this.passwordType === 'password') {\n        this.passwordType = '';\n      } else {\n        this.passwordType = 'password';\n      }\n\n      this.$nextTick(function () {\n        _this2.$refs.password.focus();\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this3 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this3.loading = true;\n\n          _this3.$store.dispatch('user/login', _this3.loginForm).then(function () {\n            _this3.$router.push({\n              path: _this3.redirect || '/'\n            });\n\n            _this3.loading = false;\n          }).catch(function () {\n            _this3.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}