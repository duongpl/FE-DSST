{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\store\\modules\\user.js","mtime":1589868463100},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = require(\"@/router\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    accessToken: (0, _auth.getToken)(),\n    name: '',\n    avatar: '',\n    userInfo: {},\n    role: '',\n    status: ''\n  };\n};\n\nvar state = getDefaultState();\nvar mutations = {\n  RESET_STATE: function RESET_STATE(state) {\n    Object.assign(state, getDefaultState());\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER_INFOR: function SET_USER_INFOR(state, userInfo) {\n    state.userInfo = userInfo;\n    state.role = userInfo.role.roleName;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  GET_STATUS: function GET_STATUS(state, data) {\n    state.status = data.results[0].status;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        var data = response.data;\n        commit('SET_TOKEN', data.token);\n        (0, _auth.setToken)(data.token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  loginGoogle: function loginGoogle(_ref2, userInfo) {\n    var commit = _ref2.commit;\n    var accessToken = userInfo.accessToken;\n    return new Promise(function (resolve, reject) {\n      (0, _user.loginGoogle)({\n        accessToken: accessToken\n      }).then(function (response) {\n        localStorage.setItem('infoUser', JSON.stringify(response));\n        commit('SET_TOKEN', response.googleId);\n        commit('SET_USER_INFOR', response);\n        (0, _auth.setToken)(response.googleId);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)(state.token).then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var name = data.name,\n            avatar = data.avatar;\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref4) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve, reject) {\n      (0, _auth.removeToken)(); // must remove  token  first\n\n      (0, _router.resetRouter)();\n      commit('RESET_STATE');\n      resolve();\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref5) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve) {\n      (0, _auth.removeToken)(); // must remove  token  first\n\n      commit('RESET_STATE');\n      resolve();\n    });\n  },\n  getStatusUser: function getStatusUser(_ref6, data) {\n    var commit = _ref6.commit;\n    console.log('xx', data);\n    return new Promise(function (resolve, reject) {\n      (0, _user.getStatus)(data).then(function (response) {\n        commit('GET_STATUS', response);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}