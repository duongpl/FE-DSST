{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\expected\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\expected\\index.vue","mtime":1589868463105},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/DUONG/Desktop/managetimetable_webapp/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"C:/Users/DUONG/Desktop/managetimetable_webapp/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _ListRadio = _interopRequireDefault(require(\"@/components/ListRadio\"));\n\nvar _util = require(\"util\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Dashboard',\n  components: {\n    ListRadio: _ListRadio.default\n  },\n  data: function data() {\n    return {\n      loading: true,\n      property: 'Blank',\n      textarea: '',\n      textareaNote: '',\n      note: '',\n      valueOption: {},\n      idYear: '',\n      listYear: [],\n      infoUser: {},\n      expectedSubjects: [],\n      expectedSlots: [],\n      expectedNote: {},\n      dataExpectedEdit: {\n        expectedSubjects: [],\n        expectedSlots: [],\n        expectedNote: {}\n      },\n      isEdit: false,\n      yearSelected: {}\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['name'])),\n  watch: {\n    valueOption: function valueOption() {\n      console.log('2');\n      this.getDataExpected();\n    }\n  },\n  created: function created() {\n    this.getYear();\n    this.infoUser = JSON.parse(localStorage.getItem('infoUser'));\n  },\n  methods: {\n    handleChange: function handleChange(value) {},\n    reuseExpected: function reuseExpected() {\n      var _this = this;\n\n      this.loading = true;\n      var paramQuery = {\n        lecturerGoogleId: this.infoUser.googleId,\n        semesterId: this.valueOption\n      };\n      this.$store.dispatch('expected/reuseExected', paramQuery).then(function (data) {\n        console.log('3');\n\n        _this.getDataExpected();\n\n        _this.$notify({\n          title: 'Success',\n          message: 'Update Successfully',\n          type: 'success',\n          duration: 2000\n        });\n\n        _this.loading = false;\n      }).catch(function () {\n        _this.loading = false;\n      });\n    },\n    getYear: function getYear() {\n      var _this2 = this;\n\n      this.loading = true;\n      this.$store.dispatch('expected/getListYear').then(function (data) {\n        _this2.listYear = _this2.$store.state.expected.listYear;\n\n        _this2.listYear.forEach(function (element) {\n          if (element.now) {\n            _this2.valueOption = element.id;\n          }\n        });\n\n        _this2.loading = false;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    },\n    sort: function sort(list) {\n      list.sort(function (a, b) {\n        var nameA = a.name.toUpperCase();\n        var nameB = b.name.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n    },\n    getDataExpected: function getDataExpected() {\n      var _this3 = this;\n\n      this.expectedSlots = [];\n      this.yearSelected = this.listYear.filter(function (i) {\n        return i.id === _this3.valueOption;\n      });\n\n      if (!this.yearSelected[0].hasData) {\n        return;\n      }\n\n      this.loading = true;\n      this.dataExpectedEdit = {\n        expectedSubjects: [],\n        expectedSlots: [],\n        expectedNote: {}\n      };\n      var paramQuery = {\n        lecturerId: this.infoUser.googleId,\n        semesterId: this.valueOption\n      };\n      this.$store.dispatch('expected/getDataExpected', paramQuery).then(function (data) {\n        _this3.expectedSubjects = _this3.$store.state.expected.dataExpected.expectedSubjects;\n\n        if (_this3.$store.state.expected.dataExpected.expectedSlots) {\n          var slot = ['M1', 'M2', 'M3', 'E1', 'E2', 'E3', 'M4', 'M5', 'E4', 'E5'];\n          var dataTemp = _this3.$store.state.expected.dataExpected.expectedSlots;\n          slot.forEach(function (element) {\n            dataTemp.forEach(function (item) {\n              if (element === item.name) {\n                _this3.expectedSlots.push(item);\n              }\n            });\n          });\n        } else {\n          _this3.expectedSlots = [];\n        }\n\n        if (_this3.$store.state.expected.dataExpected.expectedSubjects) {\n          _this3.expectedSubjects = _this3.$store.state.expected.dataExpected.expectedSubjects;\n\n          _this3.sort(_this3.expectedSubjects);\n        } else {\n          _this3.expectedSubjects = [];\n        }\n\n        if (_this3.$store.state.expected.dataExpected.expectedNote) {\n          _this3.expectedNote = _this3.$store.state.expected.dataExpected.expectedNote;\n        } else {\n          _this3.expectedNote = {};\n        }\n\n        _this3.loading = false;\n        _this3.yearSelected = _this3.listYear.filter(function (i) {\n          return i.id === _this3.valueOption;\n        });\n      }).catch(function () {\n        _this3.loading = false;\n      });\n    },\n    handleDataExpectedEdit: function handleDataExpectedEdit(data) {\n      if (data.isSubject) {\n        var indexOfSubject = this.dataExpectedEdit.expectedSubjects.findIndex(function (item) {\n          return item.name === data.value.name;\n        });\n\n        if (indexOfSubject && indexOfSubject === -1) {\n          this.dataExpectedEdit.expectedSubjects.push(data.value);\n        } else {\n          this.dataExpectedEdit.expectedSubjects[indexOfSubject].levelOfPrefer = data.value.levelOfPrefer;\n        }\n      } else {\n        var indexOfSlot = this.dataExpectedEdit.expectedSlots.findIndex(function (item) {\n          return item.name === data.value.name;\n        });\n\n        if (indexOfSlot && indexOfSlot === -1) {\n          this.dataExpectedEdit.expectedSlots.push(data.value);\n        } else {\n          this.dataExpectedEdit.expectedSlots[indexOfSlot].levelOfPrefer = data.value.levelOfPrefer;\n        }\n      }\n    },\n    saveExected: function saveExected() {\n      var _this4 = this;\n\n      this.loading = true;\n      this.dataExpectedEdit.expectedNote.expectedNumOfClass = this.expectedNote.expectedNumOfClass;\n      this.dataExpectedEdit.expectedNote.maxConsecutiveSlot = this.expectedNote.maxConsecutiveSlot;\n      this.dataExpectedEdit.expectedNote.note = this.expectedNote.note;\n      this.dataExpectedEdit.lecturer = {\n        googleId: this.infoUser.googleId\n      };\n      this.dataExpectedEdit.semester = {\n        id: this.valueOption\n      };\n      this.dataExpectedEdit.method = 'post'; // hihi ok\n\n      if (this.$store.state.expected.dataExpected.id !== 0) {\n        this.dataExpectedEdit.method = 'put';\n        this.dataExpectedEdit.id = this.$store.state.expected.dataExpected.id;\n      }\n\n      this.$store.dispatch('expected/saveDataExpected', this.dataExpectedEdit).then(function (data) {\n        _this4.isEdit = false;\n        _this4.dataExpectedEdit = {\n          expectedSubjects: [],\n          expectedSlots: [],\n          expectedNote: {}\n        };\n\n        _this4.$notify({\n          title: 'Success',\n          message: 'Save Successfully',\n          type: 'success',\n          duration: 2000\n        });\n\n        _this4.getDataExpected();\n\n        _this4.loading = false;\n      }).catch(function () {\n        _this4.loading = false;\n      });\n    },\n    editExpected: function editExpected() {\n      this.isEdit = true;\n    }\n  }\n};\nexports.default = _default;",null]}