{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\store\\modules\\request.js","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\store\\modules\\request.js","mtime":1589868463099},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _request = require(\"@/api/request\");\n\nvar state = {\n  listReport: [],\n  listGeneration: [],\n  startInterval: '',\n  fileExport: {}\n};\nvar mutations = {\n  UPLOAD_FILE: function UPLOAD_FILE(state, data) {\n    state.listReport = data;\n  },\n  EXPORT_FILE: function EXPORT_FILE(state, data) {\n    state.fileExport = data;\n  },\n  GET_LIST: function GET_LIST(state, data) {\n    state.listReport = data;\n  },\n  GET_LIST_GENERATION: function GET_LIST_GENERATION(state, data) {\n    state.listGeneration = data;\n  },\n  START_ARRANGE: function START_ARRANGE(state, data) {\n    state.listGeneration = data;\n  },\n  START_INTERVAL: function START_INTERVAL(state, data) {\n    state.startInterval = data;\n    console.log('state.startInterval', state.startInterval);\n  }\n};\nvar actions = {\n  uploadFile: function uploadFile(_ref, data) {\n    var commit = _ref.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _request.uploadFile)({\n        data: data\n      }).then(function (response) {\n        commit('UPLOAD_FILE', response);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  exportFile: function exportFile(_ref2, data) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _request.exportFile)({\n        data: data\n      }).then(function (response) {\n        commit('EXPORT_FILE', response);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  getList: function getList(_ref3, data) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _request.getList)(data).then(function (response) {\n        commit('GET_LIST', response);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  getListGeneration: function getListGeneration(_ref4, data) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _request.getListGeneration)(data).then(function (response) {\n        commit('GET_LIST_GENERATION', response);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  startArrange: function startArrange(_ref5, data) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _request.startArrange)(data).then(function (response) {\n        commit('START_ARRANGE', response);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  stopArrange: function stopArrange(_ref6, data) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _request.stopArrange)(data).then(function (response) {\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  setAsDefault: function setAsDefault(_ref7, data) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _request.setAsDefault)(data).then(function (response) {\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  startInterval: function startInterval(_ref8, data) {\n    var commit = _ref8.commit;\n    commit('START_INTERVAL', data);\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}