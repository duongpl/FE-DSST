{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\data-process\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\data-process\\index.vue","mtime":1589868463104},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/DUONG/Desktop/managetimetable_webapp/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"C:/Users/DUONG/Desktop/managetimetable_webapp/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _ListRadio = _interopRequireDefault(require(\"@/components/ListRadio\"));\n\nvar _TableCustom = _interopRequireDefault(require(\"@/components/TableCustom\"));\n\nvar _elementUi = require(\"element-ui\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  components: {\n    ListRadio: _ListRadio.default,\n    TableCustom: _TableCustom.default\n  },\n  data: function data() {\n    return {\n      slot: ['M1', 'M2', 'M3', 'E1', 'E2', 'E3', 'M4', 'M5', 'E4', 'E5'],\n      file: '',\n      valueOptionId: '',\n      listYear: '',\n      loading: false,\n      nameFile: '',\n      yearSelected: {},\n      typeFile: '',\n      listReport: [],\n      dialogFormexpected: false,\n      expectedSubjects: [],\n      expectedSlots: [],\n      expectedNote: {},\n      dataExpectedEdit: {\n        expectedSubjects: [],\n        expectedSlots: [],\n        expectedNote: {}\n      },\n      isEdit: false,\n      currentRow: {},\n      hasFile: false,\n      isFileExcel: true,\n      listGeneration: [],\n      loadingGeneration: false,\n      listDetailGeneration: [],\n      listFull: [],\n      dialogDetailGeneration: false,\n      currentPage: 1,\n      pageSize: 5,\n      totalCount: 0,\n      pageSizes: {\n        type: Array,\n        default: function _default() {\n          return [10, 20, 30, 50];\n        }\n      },\n      isRunning: Boolean,\n      limit: 10,\n      startInterval: '',\n      idSetDefault: '',\n      selected: '',\n      listTeach: [],\n      valueTeacher: [],\n      listDetailGenerationTemp: [],\n      mutationRate: 1.0,\n      populationSize: 100,\n      tournamentSize: 3,\n      convergenceCheckRange: 70,\n      hardConstraintCoff: 0.7,\n      softConstraintCoff: 0.3,\n      parttimeCoff: 0.5,\n      slotCoff: 0.35,\n      subjectCoff: 0.35,\n      numberOfClassCoff: 0.3,\n      stepGen: 10,\n      stdCoff: 0,\n      satisfactionSumCoff: 1.0,\n      distanceCoff: 0,\n      consicutiveClassCoff: 0,\n      fulltimeCoff: 0.5,\n      valueModel: 0,\n      listModel: [{\n        label: 'Linear Scalarization',\n        value: 0\n      }, {\n        label: 'Compromise Programming',\n        value: 1\n      }]\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['name'])),\n  watch: {\n    valueOptionId: function valueOptionId() {\n      var _this = this;\n\n      this.yearSelected = this.listYear.filter(function (i) {\n        return i.id === _this.valueOptionId;\n      });\n      this.hasFile = false;\n      this.nameFile = '';\n      this.getListGeneration();\n    },\n    isRunning: function isRunning() {\n      if (this.isRunning) {\n        this.startInterval = setInterval(this.getListGeneration, 3000);\n        console.log('aaa', this.startInterval);\n        this.$store.dispatch('request/startInterval', this.startInterval);\n      } else {\n        clearInterval(this.startInterval);\n      }\n    },\n    valueTeacher: function valueTeacher() {\n      var _this2 = this;\n\n      this.listDetailGeneration = this.listFull;\n      this.listDetailGeneration = this.listDetailGeneration.filter(function (item) {\n        if (_this2.valueTeacher.length === 0) {\n          return true;\n        } else {\n          return _this2.valueTeacher.includes(item.room);\n        }\n      });\n    },\n    fulltimeCoff: function fulltimeCoff() {\n      this.parttimeCoff = 1 - this.fulltimeCoff;\n    },\n    parttimeCoff: function parttimeCoff() {\n      this.fulltimeCoff = 1 - this.parttimeCoff;\n    },\n    hardConstraintCoff: function hardConstraintCoff() {\n      this.softConstraintCoff = 1 - this.hardConstraintCoff;\n    },\n    softConstraintCoff: function softConstraintCoff() {\n      this.hardConstraintCoff = 1 - this.softConstraintCoff;\n    },\n    stdCoff: function stdCoff() {\n      this.satisfactionSumCoff = 1 - this.stdCoff;\n    },\n    satisfactionSumCoff: function satisfactionSumCoff() {\n      this.stdCoff = 1 - this.satisfactionSumCoff;\n    }\n  },\n  created: function created() {\n    this.getYear();\n    this.getListGeneration();\n    this.infoUser = JSON.parse(localStorage.getItem('infoUser'));\n  },\n  methods: {\n    submitFile: function submitFile() {\n      var _this3 = this;\n\n      var formData = new FormData();\n      formData.append('file', this.file);\n      var data = {\n        formData: formData,\n        headers: {\n          semesterId: this.valueOptionId,\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      };\n      var messageIsNow = \"<p style='color: red'>\" + this.yearSelected[0].season.toUpperCase() + ' ' + this.yearSelected[0].year + ' already have data, do you want upload new data ?</p>';\n      var messageIsNotNow = 'Do you want upload data for ' + this.yearSelected[0].season + ' ' + this.yearSelected[0].year + ' kh√¥ng?';\n      var message = this.yearSelected[0].now && this.yearSelected[0].hasData ? messageIsNow : messageIsNotNow;\n      this.$confirm(message, 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        dangerouslyUseHTMLString: true,\n        type: 'warning'\n      }).then(function () {\n        _this3.loading = true;\n\n        _this3.$store.dispatch('request/uploadFile', data).then(function (data) {\n          _this3.loading = false;\n          _this3.nameFile = '';\n\n          _this3.$notify({\n            title: 'Success',\n            message: 'Submit file success',\n            type: 'success',\n            duration: 2000\n          });\n        }).catch(function () {\n          _this3.loading = false;\n        });\n      });\n    },\n    handleDataExpectedEdit: function handleDataExpectedEdit() {},\n    getYear: function getYear() {\n      var _this4 = this;\n\n      this.loading = true;\n      this.$store.dispatch('expected/getListYear').then(function (data) {\n        _this4.listYear = _this4.$store.state.expected.listYear;\n\n        _this4.listYear.forEach(function (element) {\n          if (element.now) {\n            _this4.valueOptionId = element.id;\n          }\n        });\n\n        _this4.yearSelected = _this4.listYear.filter(function (i) {\n          return i.id === _this4.valueOptionId;\n        });\n\n        _this4.getListGeneration();\n      }).catch(function () {\n        _this4.loading = false;\n      });\n    },\n    handleFileUpload: function handleFileUpload() {\n      this.file = this.$refs.file.files[0];\n      this.nameFile = this.file.name;\n      this.typeFile = this.nameFile.slice(this.nameFile.length - 5, this.nameFile.length);\n\n      if (this.typeFile === '.xlsx') {\n        this.isFileExcel = true;\n        this.hasFile = true;\n      } else {\n        this.isFileExcel = false;\n        this.hasFile = false;\n      }\n    },\n    getListGeneration: function getListGeneration() {\n      var _this5 = this;\n\n      this.loadingGeneration = true;\n      var postData = {\n        page: this.currentPage,\n        limit: 10\n      };\n      this.$store.dispatch('request/getListGeneration', postData).then(function () {\n        _this5.listGeneration = _this5.$store.state.request.listGeneration.results;\n        _this5.totalCount = _this5.$store.state.request.listGeneration.totalCount;\n        _this5.isRunning = _this5.$store.state.request.listGeneration.running;\n        _this5.loadingGeneration = false;\n        _this5.loading = false;\n      }).catch(function () {\n        _this5.loadingGeneration = false;\n        _this5.loading = false;\n      });\n    },\n    sort: function sort(list) {\n      list.sort(function (a, b) {\n        var nameA = a.toUpperCase();\n        var nameB = b.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n    },\n    previewGeneration: function previewGeneration(row) {\n      var _this6 = this;\n\n      this.listTeach = [];\n      this.selected = row;\n      this.dialogDetailGeneration = true;\n      this.listDetailGeneration = row.timetableEdit;\n      this.listFull = this.listDetailGeneration;\n      this.listDetailGeneration.forEach(function (element) {\n        _this6.listTeach.push(element.room);\n      });\n    },\n    startArrange: function startArrange() {\n      var _this7 = this;\n\n      var data = {};\n\n      if (this.valueModel === 0) {\n        data = {\n          postData: {\n            modelType: this.valueModel,\n            mutationRate: parseFloat(this.mutationRate.toFixed(2)),\n            populationSize: parseFloat(this.populationSize),\n            tournamentSize: parseFloat(this.tournamentSize.toFixed(2)),\n            convergenceCheckRange: parseFloat(this.convergenceCheckRange),\n            stepGeneration: this.stepGen,\n            cofficient: {\n              hardConstraintCoff: parseFloat(this.hardConstraintCoff.toFixed(2)),\n              softConstraintCoff: parseFloat(this.softConstraintCoff.toFixed(2)),\n              parttimeCoff: parseFloat(this.parttimeCoff.toFixed(2)),\n              slotCoff: parseFloat(this.slotCoff.toFixed(2)),\n              subjectCoff: parseFloat(this.subjectCoff),\n              numberOfClassCoff: parseFloat(this.numberOfClassCoff.toFixed(2)),\n              stdCoff: parseFloat(this.stdCoff.toFixed(2)),\n              satisfactionSumCoff: parseFloat(this.satisfactionSumCoff.toFixed(2)),\n              distanceCoff: parseFloat(this.distanceCoff.toFixed(2)),\n              fulltimeCoff: parseFloat(this.fulltimeCoff.toFixed(2))\n            }\n          },\n          queryParam: {\n            semesterId: this.valueOptionId\n          }\n        };\n      } else {\n        data = {\n          postData: {\n            modelType: this.valueModel,\n            mutationRate: parseFloat(this.mutationRate.toFixed(2)),\n            populationSize: parseFloat(this.populationSize),\n            tournamentSize: parseFloat(this.tournamentSize.toFixed(2)),\n            convergenceCheckRange: parseFloat(this.convergenceCheckRange),\n            stepGeneration: this.stepGen,\n            cofficient: {\n              hardConstraintCoff: parseFloat(this.hardConstraintCoff.toFixed(2)),\n              softConstraintCoff: parseFloat(this.softConstraintCoff.toFixed(2)),\n              parttimeCoff: parseFloat(this.parttimeCoff.toFixed(2)),\n              fulltimeCoff: parseFloat(this.fulltimeCoff.toFixed(2))\n            }\n          },\n          queryParam: {\n            semesterId: this.valueOptionId\n          }\n        };\n      }\n\n      var sum = this.slotCoff + this.subjectCoff + this.numberOfClassCoff + this.distanceCoff;\n\n      if (sum !== 1) {\n        (0, _elementUi.Message)({\n          message: 'Sum of SlotCoefficient,SubjectCoefficient,NumberOfClassCoefficient and DistanceCoefficient must be equal 1 !',\n          type: 'error',\n          duration: 5 * 1000\n        });\n      } else {\n        this.isRunning = true;\n        this.loading = true;\n        this.$store.dispatch('request/startArrange', data).then(function () {\n          _this7.loading = false;\n        }).catch(function () {\n          _this7.isRunning = false;\n          _this7.loading = false;\n          _this7.loadingGeneration = false;\n        });\n      }\n    },\n    stopArrange: function stopArrange() {\n      var _this8 = this;\n\n      this.loading = true;\n      clearInterval(this.startInterval);\n      this.getListGeneration();\n      this.$store.dispatch('request/stopArrange', {}).then(function () {\n        _this8.isRunning = false;\n        _this8.loading = false;\n      }).catch(function () {\n        _this8.loadingGeneration = false;\n      });\n    },\n    actionArrange: function actionArrange() {\n      if (!this.isRunning) {\n        this.startArrange();\n      } else {\n        this.stopArrange();\n      }\n    },\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getListGeneration();\n    },\n    setAsDefault: function setAsDefault() {\n      var _this9 = this;\n\n      this.$confirm('Set default timetable for ' + this.yearSelected[0].season + ' ' + this.yearSelected[0].year, 'Confirm', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _this9.loading = true;\n        _this9.dialogDetailGeneration = false;\n        var postData = {\n          runId: _this9.selected.id,\n          semesterId: _this9.valueOptionId\n        };\n\n        _this9.$store.dispatch('request/setAsDefault', postData).then(function () {\n          _this9.$notify({\n            title: 'Success',\n            message: 'Set default Successfully',\n            type: 'success',\n            duration: 2000\n          });\n\n          _this9.loading = false;\n        }).catch(function () {\n          _this9.loading = false;\n        });\n      });\n    }\n  }\n};\nexports.default = _default2;",null]}