{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\calendar-view\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\views\\calendar-view\\index.vue","mtime":1589868463102},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/DUONG/Desktop/managetimetable_webapp/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _TableCustom = _interopRequireDefault(require(\"@/components/TableCustom\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Arrange',\n  components: {\n    TableCustom: _TableCustom.default\n  },\n  data: function data() {\n    return {\n      valueTeacher: [],\n      valueClass: [],\n      valueRoom: [],\n      valueSubject: [],\n      day: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n      loading: true,\n      dataListCalendar: [],\n      optionId: '',\n      listYear: [],\n      listSlot: [],\n      dataDetail: {},\n      dataListRoom: [],\n      dataListClass: [],\n      dataListLecturer: [],\n      dataListSubject: [],\n      modelRoom: '',\n      modelLecturer: '',\n      infoUser: {},\n      comment: null,\n      lecturerConfirm: null,\n      titleDialogFormVisibleComment: \"Reason\",\n      dialogFormVisibleComment: false,\n      yearSelected: []\n    };\n  },\n  watch: {\n    optionId: function optionId() {\n      var _this = this;\n\n      this.yearSelected = this.listYear.filter(function (i) {\n        return i.id === _this.optionId;\n      });\n\n      if (!this.yearSelected[0].hasData) {\n        return;\n      }\n\n      this.getDataListSubject();\n      this.getDataListRoom();\n      this.getDataListClass();\n      this.getDataListLecturer();\n      this.getLecturerConfirm();\n    }\n  },\n  created: function created() {\n    this.infoUser = JSON.parse(localStorage.getItem('infoUser'));\n    this.valueTeacher.push(this.infoUser.shortName);\n    this.getYear();\n  },\n  methods: {\n    getListCalendar: function getListCalendar() {\n      var _this2 = this;\n\n      // if(!this.valueTeacher.includes(this.infoUser.shortName) && !this.infoUser.role.roleName === 'ROLE_USER') {\n      //   this.valueTeacher.push(this.infoUser.shortName);\n      // }\n      if ((this.lecturerConfirm.status === 'DRAFT' || !this.lecturerConfirm) && this.infoUser.role.roleName === 'ROLE_USER') {\n        this.dataListCalendar = [];\n        return;\n      }\n\n      this.loading = true;\n      var postData = {\n        criteria: {\n          'timetable.semester': {\n            'id': this.optionId\n          },\n          \"timetable\": {\n            \"temp\": false\n          },\n          'subject': {\n            'department': this.infoUser.department\n          }\n        },\n        inCriteria: {\n          room: {\n            name: this.valueRoom\n          },\n          className: {\n            name: this.valueClass\n          },\n          lecturer: {\n            shortName: this.valueTeacher\n          },\n          subject: {\n            code: this.valueSubject\n          }\n        }\n      };\n      this.$store.dispatch('calendarView/getListcalendar', postData).then(function (data) {\n        _this2.dataListCalendar = _this2.$store.state.calendarView.dataListCalendar;\n        _this2.loading = false;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    },\n    getYear: function getYear() {\n      var _this3 = this;\n\n      this.loading = true;\n      this.$store.dispatch('expected/getListYear').then(function (data) {\n        _this3.listYear = _this3.$store.state.expected.listYear;\n\n        _this3.listYear.forEach(function (element) {\n          if (element.now) {\n            _this3.optionId = element.id;\n          }\n        });\n\n        _this3.yearSelected = _this3.listYear.filter(function (i) {\n          return i.id === _this3.optionId;\n        });\n\n        if (!_this3.yearSelected[0].hasData) {\n          return;\n        }\n\n        _this3.getDataListSubject();\n\n        _this3.getDataListRoom();\n\n        _this3.getDataListClass();\n\n        _this3.getDataListLecturer();\n\n        _this3.getLecturerConfirm();\n      }).catch(function () {\n        _this3.loading = false;\n      });\n    },\n    getDataListRoom: function getDataListRoom() {\n      var _this4 = this;\n\n      var data = {\n        params: {\n          semesterId: this.optionId\n        },\n        postData: {}\n      };\n      this.$store.dispatch('arrange/getDataRoom', data).then(function (data) {\n        _this4.dataListRoom = _this4.$store.state.arrange.dataListRoom; // this.$router.push({ path: this.redirect || '/' })\n      }).catch(function () {\n        _this4.loading = false;\n      });\n    },\n    getLecturerConfirm: function getLecturerConfirm() {\n      var _this5 = this;\n\n      var data = {\n        params: {\n          semesterId: this.optionId\n        }\n      };\n      this.$store.dispatch('calendarView/getLecturerConfirm', data).then(function (data) {\n        _this5.lecturerConfirm = _this5.$store.state.calendarView.lecturerConfirm;\n\n        _this5.getListCalendar();\n\n        _this5.loading = false;\n      }).catch(function () {\n        _this5.loading = false;\n      });\n    },\n    acceptTimetable: function acceptTimetable() {\n      var _this6 = this;\n\n      var data = {\n        postData: {\n          id: this.lecturerConfirm.id,\n          status: 'FINAL'\n        }\n      };\n      this.$store.dispatch('calendarView/updateLecturerConfirm', data).then(function (data) {\n        _this6.lecturerConfirm = _this6.$store.state.calendarView.lecturerConfirmUpdate;\n\n        _this6.$notify({\n          title: 'Success',\n          message: 'Confirm Successfully',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(function () {\n        _this6.loading = false;\n      });\n    },\n    rejectTimetable: function rejectTimetable() {\n      var _this7 = this;\n\n      var data = {\n        postData: {\n          id: this.lecturerConfirm.id,\n          status: 'REJECT',\n          reason: this.comment\n        }\n      };\n      this.$store.dispatch('calendarView/updateLecturerConfirm', data).then(function (data) {\n        _this7.lecturerConfirm = _this7.$store.state.calendarView.lecturerConfirmUpdate;\n        _this7.dialogFormVisibleComment = false;\n\n        _this7.$notify({\n          title: 'Success',\n          message: 'Confirm Successfully',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(function () {\n        _this7.loading = false;\n      });\n    },\n    getDataListSubject: function getDataListSubject() {\n      var _this8 = this;\n\n      var data = {\n        params: {\n          semesterId: this.optionId\n        },\n        postData: {}\n      };\n      this.$store.dispatch('arrange/getDataSubject', data).then(function (data) {\n        _this8.dataListSubject = _this8.$store.state.arrange.dataListSubject;\n      }).catch(function () {});\n    },\n    getDataListLecturer: function getDataListLecturer() {\n      var _this9 = this;\n\n      var postData = {\n        postData: {\n          criteria: {\n            'login': true,\n            'status': 0,\n            department: this.infoUser.department\n          }\n        },\n        params: {\n          semesterId: this.optionId\n        }\n      };\n      this.$store.dispatch('arrange/getDataLecturer', postData).then(function (data) {\n        _this9.dataListLecturer = _this9.$store.state.arrange.dataListLecturer.results; // this.$router.push({ path: this.redirect || '/' })\n      }).catch(function () {\n        _this9.loading = false;\n      });\n    },\n    getDataListClass: function getDataListClass() {\n      var _this10 = this;\n\n      var data = {\n        params: {\n          semesterId: this.optionId\n        },\n        postData: {}\n      };\n      this.$store.dispatch('arrange/getDataClass', data).then(function (data) {\n        _this10.dataListClass = _this10.$store.state.arrange.dataListClass; // this.$router.push({ path: this.redirect || '/' })\n      }).catch(function () {\n        _this10.loading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}