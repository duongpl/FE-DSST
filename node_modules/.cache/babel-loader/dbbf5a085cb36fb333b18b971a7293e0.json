{"remainingRequest":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\store\\modules\\expected.js","dependencies":[{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\src\\store\\modules\\expected.js","mtime":1590566633878},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DUONG\\Desktop\\managetimetable_webapp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/DUONG/Desktop/managetimetable_webapp/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _settings = _interopRequireDefault(require(\"@/settings\"));\n\nvar _expected = require(\"@/api/expected\");\n\nvar showSettings = _settings.default.showSettings,\n    fixedHeader = _settings.default.fixedHeader,\n    sidebarLogo = _settings.default.sidebarLogo;\nvar state = {\n  showSettings: showSettings,\n  fixedHeader: fixedHeader,\n  sidebarLogo: sidebarLogo,\n  listYear: [],\n  dataExpected: [],\n  dataExpectedEdit: {},\n  listExpected: []\n};\nvar mutations = {\n  CHANGE_SETTING: function CHANGE_SETTING(state, _ref) {\n    var key = _ref.key,\n        value = _ref.value;\n\n    if (state.hasOwnProperty(key)) {\n      state[key] = value;\n    }\n  },\n  LIST_YEAR: function LIST_YEAR(state, data) {\n    state['listYear'] = data;\n  },\n  DATA_EXPECTED: function DATA_EXPECTED(state, data) {\n    state['dataExpected'] = data;\n  },\n  SAVE_EXPECTED_EDIT: function SAVE_EXPECTED_EDIT(state, data) {\n    state['dataExpectedEdit'] = data;\n  },\n  REUSE_EXECTED: function REUSE_EXECTED(state, data) {\n    state['dataExpected'] = data;\n  },\n  LIST_EXPECTED_VIEW: function LIST_EXPECTED_VIEW(state, data) {\n    state.listExpected = data;\n  }\n};\nvar actions = {\n  changeSetting: function changeSetting(_ref2, data) {\n    var commit = _ref2.commit;\n    commit('CHANGE_SETTING', data);\n  },\n  getListYear: function getListYear(_ref3, data) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _expected.getListYear)({}).then(function (response) {\n        commit('LIST_YEAR', response); // setToken(data.token)\n\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  getDataExpected: function getDataExpected(_ref4, data) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _expected.getDataExpected)({\n        data: data\n      }).then(function (response) {\n        commit('DATA_EXPECTED', response); // setToken(data.token)\n\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  listExpectedForView: function listExpectedForView(_ref5, data) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _expected.listExpectedForView)({\n        data: data\n      }).then(function (response) {\n        commit('LIST_EXPECTED_VIEW', response); // setToken(data.token)\n\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  saveDataExpected: function saveDataExpected(_ref6, data) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _expected.saveDataExpected)({\n        data: data\n      }).then(function (response) {\n        commit('SAVE_EXPECTED_EDIT', data);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  reuseExected: function reuseExected(_ref7, data) {\n    var commit = _ref7.commit;\n    console.log('xxxxx');\n    return new Promise(function (resolve, reject) {\n      (0, _expected.reuseExected)({\n        data: data\n      }).then(function (response) {\n        commit('REUSE_EXECTED', data);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}